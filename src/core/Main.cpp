/**
	\file
    \brief Главный файл программы
	\author SavaLione
*/
#include <string>

#include "..\core\Operations.h"

#include "..\io\Logger.h"

#include "..\ui\Menu.h"
#include "..\ui\Items.h"

/**
	\return Код завершения программы
	Вызов программы компилятором
*/
int main() {																			// Запуск программы
	std::string s_menu_choice = "";														// Строка в которую будет помещен выбранный пункт меню.
	log("LOG", "----------------------------[RUN RADIX]----------------------------");	// Сообщение в лог, старт программы.
	v_initialization();																	// Запуск модуля инициализации
	if (s_checkagreement() == "Yes") {													// Проверка. Согласен ли пользователь с условиями программы.
		v_manual();																		// Инструкция к программе.
		s_menu_choice = s_mainmenu();													// Присвоить строке выбранный пункт меню.
		/* 
			Вызов модуля главного меню.
			Если модуль в результате работы вернул код 0, то он корректно завершил свою работу.
			Если модуль в результате работы вернул код отличный от 0, то в работе модуля произошла ошибка.
			
		*/
		if (s_menu_choice == "Exit") {													// Пункт меню exit.
			log("LOG", "Main Menu Module correctly completed work.");					// Вывод сообщения в консоль о том, что модуль корректно завершил свою работу.
		} else if (s_menu_choice == "Root") {											// Пункт меню root.
			root();																		// Вызов алгоритма получения root прав.
		} else {																		// Если не выбран не один из перечисленных пунктов меню.
			log("WARN", "Unknown menu item.");											// Сообщение в лог о том, что данного пункта меню не существует.
		}
	} else {																			// Если пользователь не согласен с пользовательским соглашением.
		log("WARN", "User does not agree with the terms of the program.");				// Вывод сообщения в консоль о том, что пользователь не согласен с условими программы.
	}
	v_exit();																			// Вывод ascii графики в консоль с сообщением о выходе из программы.
	log("LOG", "Exit");																	// Сообщение в лог, выход из программы.
	return 0;																			//	Код завершения программы.
}